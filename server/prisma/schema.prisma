// // This is your Prisma schema file,
// // learn more about it in the docs: https://pris.ly/d/prisma-schema

// // Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

// enum ItemType {
//   Veg
//   Non_Veg
// }

// enum MealType {
//   Breakfast
//   Lunch
//   Dinner
//   Combo
// }

// // enum Plan {
// //   Individual
// //   Combo
// // }

// enum tier {
//   Budget
//   Elite
// }

// model Users {
//   id Int @id @default(autoincrement())
//   customer_id String @unique
//   username String
//   email String @unique
//   display_picture String?
//   created_at DateTime
//   updatedAt DateTime
//   UserNumber Phone_Number[]
//   UserPosition User_Position[]
//   SubscriptionPayment Subscription_Payment[]
// }

// model Phone_Number {
//   id Int @id @default(autoincrement())
//   user_id Int
//   customer_id String
//   phone_number String
//   alternate_number String?
//   created_at DateTime
//   UserNumber Users @relation(fields: [user_id],references: [id])
// }

// model User_Position {
//   id Int @id @default(autoincrement())
//   position String
//   user_id Int
//   created_at DateTime
//   updatedAt DateTime
//   Users Users @relation(fields: [user_id],references: [id])
// }

// model User_Address {
//   id Int @id @default(autoincrement())
//   name String
//   customer_id String
//   email String
//   phone_number String
//   alternate_number String?
//   landmark String
//   street String
//   city String
//   pincode String
//   created_at DateTime
//   updatedAt DateTime
// }

// model User_Subscription {
//   id Int @id @default(autoincrement())
//   subscription_id Int
//   start_date DateTime
//   end_date DateTime
//   status String
//   customer_id String
//   validity_days Int
//   created_at DateTime
//   updatedAt DateTime
//   Subscription Subscription @relation(fields: [subscription_id],references: [id])
// }

// model Subscription {
//   id                 Int                  @id @default(autoincrement())
//   parent_plan_id     Int
//   plan_description   String
//   tier_id Int
//   duration_id Int
//   quantity_id Int
//   meal_type_id Int
//   price_id              Int
//   created_at         DateTime             @default(now())
//   updatedAt          DateTime             @updatedAt
//   SubscriptionPayments Subscription_Payment[] @relation("SubscriptionToPayment")
//   parentPlan1        Parent_Plan          @relation(fields: [parent_plan_id], references: [id])
//   TierSub Tier @relation(fields: [tier_id],references: [id])
//   DurationSub Quantity @relation(fields: [duration_id],references: [id])
//   DurationSubs Duration @relation(fields: [quantity_id],references: [id])
//   MealSub Meal_type @relation(fields: [meal_type_id],references: [id])
//   PricingDetails Pricing_Details @relation(fields: [price_id],references: [id])
//   Subscription User_Subscription[]
//   FoodSubscription Subscription_Food_Menu[]
//   SubscriptionPricing Subscription_Pricing[]
// }

// model Tier {
//   id Int @id @default(autoincrement())
//   type tier
//   created_at DateTime
//   updatedAt DateTime
//   TierSub Subscription[]
// }

// model Quantity {
//   id Int @id @default(autoincrement())
//   quantity Int
//   created_at DateTime
//   updatedAt DateTime
//   DurationSub Subscription[]
// }

// model Duration {
//   id Int @id @default(autoincrement())
//   actual_days Int
//   addon_days Int
//   created_at DateTime
//   updatedAt DateTime
//   DurationSubs Subscription[]

// }

// model Parent_Plan {
//   id         Int       @id @default(autoincrement())
//   plan_name       String
//   created_at DateTime  @default(now())
//   updatedAt  DateTime  @updatedAt
//   subscriptions Subscription[]
// }

// model Subscription_Payment {
//   id                     Int      @id @default(autoincrement())
//   payment_method         String
//   subscription_id        Int
//   user_id                Int
//   payment_status         String
//   created_at             DateTime @default(now())
//   updatedAt              DateTime @updatedAt
//   SubscriptionPayment    Subscription @relation("SubscriptionToPayment", fields: [subscription_id], references: [id])
//   SubscriptionPaymentUsers Users        @relation(fields: [user_id], references: [id])
// }

// model Subscription_Pricing {
//   id Int @id @default(autoincrement())
//   subscription_id Int
//   pricing_id Int
//   created_at DateTime
//   updatedAt DateTime
//   SubscriptionPricing Subscription @relation(fields: [subscription_id],references: [id])
//   SubPricing Pricing_Details @relation(fields: [pricing_id],references: [id])
// }
// model Pricing_Details {
//   id Int @id @default(autoincrement())
//   price Float
//   created_at DateTime
//   updatedAt DateTime
//   PricingSub Subscription_Pricing[]
//   PricingDetails Subscription[]
//   SubscriptionPriceDetailss Food_Items[]

// }

// model Food_Items {
//   id Int @id @default(autoincrement())
//   item_name String
//   item_type ItemType
//   description String
//   price_id Int
//   image_url String?
//   created_at DateTime
//   updatedAt DateTime
//   SubscriptionPriceDetails Pricing_Details @relation(fields: [price_id],references: [id]) 
//   FoodItemsMenu Subscription_Food_Menu[]
// }

// model Subscription_Food_Menu {
//   id Int @id @default(autoincrement())
//   subscription_id Int
//   food_item_id Int
//   created_at DateTime
//   updatedAt DateTime
//   FoodSubscription Subscription @relation(fields: [subscription_id],references: [id])
//   FoodItems Food_Items @relation(fields: [food_item_id],references: [id])
// }

// model Meal_type {
//   id Int @id @default(autoincrement())
//   meal_type MealType
//   created_at DateTime
//   updatedAt DateTime
//   MealSub Subscription[]
// }

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ItemType {
  Veg
  Non_Veg
}

enum MealType {
  Breakfast
  Lunch
  Dinner
  Combo
}

// enum Plan {
//   Individual
//   Combo
// }

enum tier {
  Budget
  Elite
}

model Users {
  id                  Int                    @id @default(autoincrement())
  customer_id         String                 @unique
  username            String
  email               String                 @unique
  display_picture     String?
  created_at          DateTime
  updatedAt           DateTime
  UserPosition        User_Position[]
  SubscriptionPayment Subscription_Payment[]
  userAddress User_Address[]
  userSubscription User_Subscription[]
  usersFoodSubscription Subscription_Order[] 
  userRating User_Rating[]
}



model User_Position {
  id         Int      @id @default(autoincrement())
  position   String   @default("USER")
  user_id    Int
  created_at DateTime
  updatedAt  DateTime
  Users      Users    @relation(fields: [user_id], references: [id])
}

model User_Address {
  id               Int      @id @default(autoincrement())
  name             String
  customer_id      String
  email            String
  phone_number     String
  alternate_number String?
  landmark         String
  street           String
  city             String
  pincode          String
  created_at       DateTime
  updatedAt        DateTime
  userAddress Users @relation(fields: [customer_id],references: [customer_id])
}

model User_Subscription {
  id               Int                  @id @default(autoincrement())
  subscription_id  Int
  start_date       DateTime
  end_date         DateTime
  status           String
  customer_id      String 
  validity_days    Int
  created_at       DateTime
  updatedAt        DateTime
  Subscription     Subscription         @relation(fields: [subscription_id], references: [id])
  UserSubscription Subscription_Order[]
  UserSubscriptionOrders Order_Item[]
  userSubscriptionFood User_Food_Report[]
  userSubscriptionDetails Users @relation(fields: [customer_id],references: [customer_id])
}

model Subscription {
  id                   Int                      @id @default(autoincrement())
  parent_plan_id       Int
  plan_description     String
  tier_id              Int
  duration_id          Int
  quantity_id          Int
  meal_type_id         Int
  price_id             Int
  created_at           DateTime                 @default(now())
  updatedAt            DateTime                 @updatedAt
  SubscriptionPayments Subscription_Payment[]   @relation("SubscriptionToPayment")
  parentPlan1          Parent_Plan              @relation(fields: [parent_plan_id], references: [id])
  TierSub              Tier                     @relation(fields: [tier_id], references: [id])
  DurationSub          Quantity                 @relation(fields: [duration_id], references: [id])
  DurationSubs         Duration                 @relation(fields: [quantity_id], references: [id])
  MealSub              Meal_type                @relation(fields: [meal_type_id], references: [id])
  PricingDetails       Pricing_Details          @relation(fields: [price_id], references: [id])
  Subscription         User_Subscription[]
  FoodSubscription     Subscription_Food_Menu[]
  SubscriptionPricing  Subscription_Pricing[]
  Subscriptions Cart[]
  SubscriptionOrders Orders[]
}

model Tier {
  id         Int            @id @default(autoincrement())
  type       tier
  created_at DateTime
  updatedAt  DateTime
  TierSub    Subscription[]
}

model Quantity {
  id          Int            @id @default(autoincrement())
  quantity    Int
  created_at  DateTime
  updatedAt   DateTime
  DurationSub Subscription[]
}

model Duration {
  id           Int            @id @default(autoincrement())
  actual_days  Int
  addon_days   Int
  created_at   DateTime
  updatedAt    DateTime
  DurationSubs Subscription[]
}

model Parent_Plan {
  id            Int            @id @default(autoincrement())
  plan_name     String
  created_at    DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  subscriptions Subscription[]
}

model Subscription_Payment {
  id                       Int          @id @default(autoincrement())
  payment_method           String
  subscription_id          Int
  user_id                  Int
  payment_status           String
  created_at               DateTime     @default(now())
  updatedAt                DateTime     @updatedAt
  SubscriptionPayment      Subscription @relation("SubscriptionToPayment", fields: [subscription_id], references: [id])
  SubscriptionPaymentUsers Users        @relation(fields: [user_id], references: [id])
}

model Subscription_Pricing {
  id                  Int             @id @default(autoincrement())
  subscription_id     Int
  pricing_id          Int
  created_at          DateTime
  updatedAt           DateTime
  SubscriptionPricing Subscription    @relation(fields: [subscription_id], references: [id])
  SubPricing          Pricing_Details @relation(fields: [pricing_id], references: [id])
}

model Pricing_Details {
  id                        Int                    @id @default(autoincrement())
  price                     Float
  created_at                DateTime
  updatedAt                 DateTime
  PricingSub                Subscription_Pricing[]
  PricingDetails            Subscription[]
  SubscriptionPriceDetailss Food_Items[]
  OrderPriceDetails Order_Item[]
}

model Food_Items {
  id                       Int                      @id @default(autoincrement())
  item_name                String
  item_type                ItemType
  description              String
  price_id                 Int
  image_url                String?
  created_at               DateTime
  updatedAt                DateTime
  SubscriptionPriceDetails Pricing_Details          @relation(fields: [price_id], references: [id])
  FoodItemsMenu            Subscription_Food_Menu[]
  FoodItemsOrder Order_Item[]
  FoodItemsCart Cart[]
  additionalItems Additional_Itemss[]
}

model Subscription_Food_Menu {
  id               Int          @id @default(autoincrement())
  subscription_id  Int
  food_item_id     Int
  created_at       DateTime
  updatedAt        DateTime
  FoodSubscription Subscription @relation(fields: [subscription_id], references: [id])
  FoodItems        Food_Items   @relation(fields: [food_item_id], references: [id])
}

model Subscription_Order {
  id                   Int               @id @default(autoincrement())
  user_id              Int
  customer_id          String 
  order_item_id        Int
  user_subscription_id Int
  created_at           DateTime
  updatedAt            DateTime
  userSubscription     User_Subscription @relation(fields: [user_subscription_id], references: [id])
  userSubscriptionCustomer Users @relation( fields: [customer_id],references: [customer_id])
}

model Meal_type {
  id         Int            @id @default(autoincrement())
  meal_type  MealType
  created_at DateTime
  updatedAt  DateTime
  MealSub    Subscription[]
  MealOrder Order_Criteria[]
}

model Orders {
  id                 Int      @id @default(autoincrement())
  subscription_id Int
  status             String @default("PENDING")
  total_meal         String
  charges            Int
  ordered_address_id Int
  created_at         DateTime
  updatedAt          DateTime
  SubscriptionId Subscription @relation(fields: [subscription_id],references: [id])
}

model Order_Criteria {
  id            Int      @id @default(autoincrement())
  meal_type_id  Int
  order_time    String
  cutoff_time   String
  created_at    DateTime
  updatedAt     DateTime
  MealType Meal_type @relation(fields: [meal_type_id],references: [id])
}

model Order_Item {
  id           Int      @id @default(autoincrement())
  user_sub_id  Int
  food_item_id Int
  quantity     Int
  price_id     Int
  created_at   DateTime
  updatedAt    DateTime
  UserSubscription User_Subscription @relation(fields: [user_sub_id],references: [id])
  FoodItems Food_Items @relation(fields: [food_item_id],references: [id])
  Prices Pricing_Details @relation(fields: [price_id],references: [id])

}
model Cart {
  id Int @id @default(autoincrement())
  subscription_id Int
  user_id Int
  customer_id String
  food_item_id Int
  created_at DateTime
  updatedAt DateTime
  Subscription Subscription @relation(fields: [subscription_id],references: [id])
  FoodItems Food_Items @relation(fields: [food_item_id],references: [id])
}


model User_Food_Report {
  id Int @id @default(autoincrement())
  user_subscription_id Int
  user_id Int
  customer_id String
  breakfast_qty Int
  lunch_qty Int
  dinner_qty Int
  ordered_date DateTime
  created_at DateTime
  updatedAt DateTime
  userSubscription User_Subscription @relation(fields: [user_subscription_id],references: [id])
}

model Daily_Menu {
  id Int @id @default(autoincrement())
  period Int
  subscription_food_menu_id Int
  created_at DateTime
  updatedAt DateTime
}

model Additional_Itemss {
  id Int @id @default(autoincrement())
  food_item_id Int
  is_additional Boolean?
  created_at DateTime
  updatedAt DateTime
  additionalItems Food_Items @relation(fields: [food_item_id],references: [id])
}

model Periodical {
  id Int @id @default(autoincrement())
  period String
  comments String
  created_at DateTime
  updatedAt DateTime
}

model Item_Payment {
  id Int  @id @default(autoincrement())
  payment_method String
  food_item_id Int
  user_id Int
  customer_id String
  user_subscription_id Int
  payment_status String
  payment_info Json
  created_at DateTime
  updatedAt DateTime
}

model Order_Response {
  id Int @id @default(autoincrement())
  status String
  address_id Int
  user_id Int
  customer_id Int
  delivery_user_id Int
  user_subscription_id Int
  created_at DateTime
  updatedAt DateTime
}

model Delivery {
  id Int @id @default(autoincrement())
  oredr_id Int
  user_position_id Int
  user_id Int
  customer_id String
  delivery_status String
  delivery_response String
  created_at DateTime
  updatedAt DateTime
}

model Cancellation {
  id Int @id @default(autoincrement())
  cancellation_criteria_id Int
  subscription_id Int
  user_subscription_id Int
  user_id Int
  customer_id String
  cancellation_date DateTime
  cancellation_reason String
  refund_status String
  cancellation_status String
}

model Notication_Details {
  id Int @id @default(autoincrement())
  entity_type String
  entity_id Int
  created_at DateTime
  updatedAt DateTime
}



model Notification {
  id Int @id @default(autoincrement())
  user_id Int
  customer_id String
  admin_id Int
  notifier_type String
  notofication_description String
  notification_details_id Int
  created_at DateTime
  updatedAt DateTime
}

model User_Wallet {
  id Int @id @default(autoincrement())
  refunded_amount String
  user_id Int
  customer_id String
  created_at DateTime
  updateAt DateTime
}

model cart {
  id Int @id @default(autoincrement())
  subscription_id Int
  user_id Int
  customer_id String
  food_item_id Int
  created_at DateTime
  updatedAt DateTime
}

model User_Rating {
  id Int @id @default(autoincrement())
  user_id Int
  customer_id String 
  rating Int
  description String
  created_at DateTime
  updatedAt DateTime 
  UserRatingUsers Users @relation(fields: [customer_id],references: [customer_id])
}